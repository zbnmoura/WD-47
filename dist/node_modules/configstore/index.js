"use strict";var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var path=require("path"),os=require("os"),fs=require("graceful-fs"),makeDir=require("make-dir"),xdgBasedir=require("xdg-basedir"),writeFileAtomic=require("write-file-atomic"),dotProp=require("dot-prop"),uniqueString=require("unique-string"),configDir=xdgBasedir.config||path.join(os.tmpdir(),uniqueString()),permissionError="You don't have access to this file.",makeDirOptions={mode:448},writeFileOptions={mode:384},Configstore=function(){function e(t,r,i){_classCallCheck(this,e);var n=(i=i||{}).globalConfigPath?path.join(t,"config.json"):path.join("configstore",t+".json");this.path=path.join(configDir,n),this.all=Object.assign({},r,this.all)}return _createClass(e,[{key:"get",value:function(e){return dotProp.get(this.all,e)}},{key:"set",value:function(e,t){var r=this.all;if(1===arguments.length){var i=!0,n=!1,a=void 0;try{for(var o,s=Object.keys(e)[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;dotProp.set(r,l,e[l])}}catch(e){n=!0,a=e}finally{try{!i&&s.return&&s.return()}finally{if(n)throw a}}}else dotProp.set(r,e,t);this.all=r}},{key:"has",value:function(e){return dotProp.has(this.all,e)}},{key:"delete",value:function(e){var t=this.all;dotProp.delete(t,e),this.all=t}},{key:"clear",value:function(){this.all={}}},{key:"all",get:function(){try{return JSON.parse(fs.readFileSync(this.path,"utf8"))}catch(e){if("ENOENT"===e.code)return makeDir.sync(path.dirname(this.path),makeDirOptions),{};if("EACCES"===e.code&&(e.message=e.message+"\n"+permissionError+"\n"),"SyntaxError"===e.name)return writeFileAtomic.sync(this.path,"",writeFileOptions),{};throw e}},set:function(e){try{makeDir.sync(path.dirname(this.path),makeDirOptions),writeFileAtomic.sync(this.path,JSON.stringify(e,null,"\t"),writeFileOptions)}catch(e){throw"EACCES"===e.code&&(e.message=e.message+"\n"+permissionError+"\n"),e}}},{key:"size",get:function(){return Object.keys(this.all||{}).length}}]),e}();module.exports=Configstore;