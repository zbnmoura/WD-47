"use strict";var slice=Array.prototype.slice;function co(t){var r=this,n=slice.call(arguments,1);return new Promise(function(o,e){if("function"==typeof t&&(t=t.apply(r,n)),!t||"function"!=typeof t.next)return o(t);function i(r){var n;try{n=t.next(r)}catch(t){return e(t)}u(n)}function c(r){var n;try{n=t.throw(r)}catch(t){return e(t)}u(n)}function u(t){if(t.done)return o(t.value);var n=toPromise.call(r,t.value);return n&&isPromise(n)?n.then(i,c):c(new TypeError('You may only yield a function, promise, generator, array, or object, but the following object was passed: "'+String(t.value)+'"'))}i()})}function toPromise(t){return t?isPromise(t)?t:isGeneratorFunction(t)||isGenerator(t)?co.call(this,t):"function"==typeof t?thunkToPromise.call(this,t):Array.isArray(t)?arrayToPromise.call(this,t):isObject(t)?objectToPromise.call(this,t):t:t}function thunkToPromise(t){var r=this;return new Promise(function(n,o){t.call(r,function(t,r){if(t)return o(t);arguments.length>2&&(r=slice.call(arguments,1)),n(r)})})}function arrayToPromise(t){return Promise.all(t.map(toPromise,this))}function objectToPromise(t){for(var r=new t.constructor,n=Object.keys(t),o=[],e=0;e<n.length;e++){var i=n[e],c=toPromise.call(this,t[i]);c&&isPromise(c)?u(c,i):r[i]=t[i]}return Promise.all(o).then(function(){return r});function u(t,n){r[n]=void 0,o.push(t.then(function(t){r[n]=t}))}}function isPromise(t){return"function"==typeof t.then}function isGenerator(t){return"function"==typeof t.next&&"function"==typeof t.throw}function isGeneratorFunction(t){var r=t.constructor;return!!r&&("GeneratorFunction"===r.name||"GeneratorFunction"===r.displayName||isGenerator(r.prototype))}function isObject(t){return Object==t.constructor}module.exports=co.default=co.co=co,co.wrap=function(t){return r.__generatorFunction__=t,r;function r(){return co.call(this,t.apply(this,arguments))}};