"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},json="undefined"!=typeof JSON?JSON:require("jsonify");module.exports=function(r,n){n||(n={}),"function"==typeof n&&(n={cmp:n});var t=n.space||"";"number"==typeof t&&(t=Array(t+1).join(" "));var o,e="boolean"==typeof n.cycles&&n.cycles,i=n.replacer||function(r,n){return n},u=n.cmp&&(o=n.cmp,function(r){return function(n,t){var e={key:n,value:r[n]},i={key:t,value:r[t]};return o(e,i)}}),f=[];return function r(n,o,y,c){var s=t?"\n"+new Array(c+1).join(t):"",a=t?": ":":";if(y&&y.toJSON&&"function"==typeof y.toJSON&&(y=y.toJSON()),void 0!==(y=i.call(n,o,y))){if("object"!==(void 0===y?"undefined":_typeof(y))||null===y)return json.stringify(y);if(isArray(y)){for(var l=[],p=0;p<y.length;p++){var v=r(y,p,y[p],c+1)||json.stringify(null);l.push(s+t+v)}return"["+l.join(",")+s+"]"}if(-1!==f.indexOf(y)){if(e)return json.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}f.push(y);var j=objectKeys(y).sort(u&&u(y));for(l=[],p=0;p<j.length;p++){var b=r(y,o=j[p],y[o],c+1);if(b){var m=json.stringify(o)+a+b;l.push(s+t+m)}}return f.splice(f.indexOf(y),1),"{"+l.join(",")+s+"}"}}({"":r},"",r,0)};var isArray=Array.isArray||function(r){return"[object Array]"==={}.toString.call(r)},objectKeys=Object.keys||function(r){var n=Object.prototype.hasOwnProperty||function(){return!0},t=[];for(var o in r)n.call(r,o)&&t.push(o);return t};