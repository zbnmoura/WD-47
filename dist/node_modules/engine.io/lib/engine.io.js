var http = require('http');exports = module.exports = function(){// backwards compatible use as `.attach` // if first argument is an http server if(arguments.length && arguments[0] instanceof http.Server){return attach.apply(this,arguments)}// if first argument is not an http server,then just make a regular eio server return exports.Server.apply(null,arguments)};exports.protocol = 1;exports.Server = require('./server');exports.Socket = require('./socket');exports.Transport = require('./transport');exports.transports = require('./transports');exports.parser = require('engine.io-parser');exports.listen = listen;function listen(port,options,fn){if('function' === typeof options){fn = options;}var server = http.createServer(function(req,res){res.writeHead(501);res.end('Not Implemented')});// create engine server var engine = exports.attach(server,options);engine.httpServer = server;server.listen(port,fn);return engine}exports.attach = attach;function attach(server,options){var engine = new exports.Server(options);engine.attach(server,options);return engine}