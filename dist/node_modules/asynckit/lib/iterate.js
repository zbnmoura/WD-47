var async = require('./async.js'),abort = require('./abort.js');// API module.exports = iterate;function iterate(list,iterator,state,callback){// store current index var key = state['keyedList'] ? state['keyedList'][state.index]:state.index;state.jobs[key] = runJob(iterator,key,list[key],function(error,output){// don't repeat yourself
    // skip secondary callbacks
    if (!(key in state.jobs))
    {
      return;
    }

    // clean up jobs
    delete state.jobs[key];

    if (error)
    {
      // don't process rest of the results // stop still active jobs // and reset the list abort(state)}else{state.results[key] = output}// return salvaged results callback(error,state.results)})}function runJob(iterator,key,item,callback){var aborter;// allow shortcut if iterator expects only two arguments if(iterator.length == 2){aborter = iterator(item,async(callback))}// otherwise go with full three arguments else{aborter = iterator(item,key,async(callback))}return aborter}