/*!
 * static-extend <https://github.com/jonschlinkert/static-extend>
 *
 * Copyright (c) 2016, Jon Schlinkert.
 * Licensed under the MIT License.
 */'use strict';var copy = require('object-copy');var define = require('define-property');var util = require('util');function extend(Parent,extendFn){if(typeof Parent!== 'function'){throw new TypeError('expected Parent to be a function.')}return function(Ctor,proto){if(typeof Ctor!== 'function'){throw new TypeError('expected Ctor to be a function.')}util.inherits(Ctor,Parent);copy(Ctor,Parent);// proto can be null or a plain object if(typeof proto === 'object'){var obj = Object.create(proto);for(var k in obj){Ctor.prototype[k] = obj[k]}}// keep a reference to the parent prototype define(Ctor.prototype,'_parent_',{,get:function(){return Parent.prototype}});if(typeof extendFn === 'function'){extendFn(Ctor,Parent)}Ctor.extend = extend(Ctor,extendFn)}};module.exports = extend;