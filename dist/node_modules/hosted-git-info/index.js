"use strict";var url=require("url"),gitHosts=require("./git-host-info.js"),GitHost=module.exports=require("./git-host.js"),protocolToRepresentationMap={"git+ssh":"sshurl","git+https":"https",ssh:"sshurl",git:"git"};function protocolToRepresentation(t){return":"===t.substr(-1)&&(t=t.slice(0,-1)),protocolToRepresentationMap[t]||t}var authProtocols={"git:":!0,"https:":!0,"git+https:":!0,"http:":!0,"git+http:":!0},cache={};function fromUrl(t,o){if(null!=t&&""!==t){var r=fixupUnqualifiedGist(isGitHubShorthand(t)?"github:"+t:t),e=parseGitUrl(r),s=r.match(new RegExp("^([^:]+):(?:(?:[^@:]+(?:[^@]+)?@)?([^/]*))[/](.+?)(?:[.]git)?($|#)")),n=Object.keys(gitHosts).map(function(t){try{var r=gitHosts[t],n=null;e.auth&&authProtocols[e.protocol]&&(n=decodeURIComponent(e.auth));var i=e.hash?decodeURIComponent(e.hash.substr(1)):null,u=null,h=null,l=null;if(s&&s[1]===t)u=s[2]&&decodeURIComponent(s[2]),h=decodeURIComponent(s[3]),l="shortcut";else{if(e.host!==r.domain)return;if(!r.protocols_re.test(e.protocol))return;if(!e.path)return;var a=r.pathmatch,c=e.path.match(a);if(!c)return;null!=c[1]&&(u=decodeURIComponent(c[1].replace(/^:/,""))),null!=c[2]&&(h=decodeURIComponent(c[2])),l=protocolToRepresentation(e.protocol)}return new GitHost(t,u,n,h,i,l,o)}catch(t){if(!(t instanceof URIError))throw t}}).filter(function(t){return t});if(1===n.length)return n[0]}}function isGitHubShorthand(t){return/^[^:@%/\s.-][^:@%/\s]*[/][^:@\s/%]+(?:#.*)?$/.test(t)}function fixupUnqualifiedGist(t){var o=url.parse(t);return"gist:"===o.protocol&&o.host&&!o.path?o.protocol+"/"+o.host:t}function parseGitUrl(t){"string"!=typeof t&&(t=""+t);var o=t.match(/^([^@]+)@([^:/]+):[/]?((?:[^/]+[/])?[^/]+?)(?:[.]git)?(#.*)?$/);return o?{protocol:"git+ssh:",slashes:!0,auth:o[1],host:o[2],port:null,hostname:o[2],hash:o[4],search:null,query:null,pathname:"/"+o[3],path:"/"+o[3],href:"git+ssh://"+o[1]+"@"+o[2]+"/"+o[3]+(o[4]||"")}:url.parse(t)}module.exports.fromUrl=function(t,o){var r=t+JSON.stringify(o||{});return r in cache||(cache[r]=fromUrl(t,o)),cache[r]};