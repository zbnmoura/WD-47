"use strict";var _slicedToArray=function(){return function(r,e){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return function(r,e){var t=[],o=!0,n=!1,s=void 0;try{for(var a,c=r[Symbol.iterator]();!(o=(a=c.next()).done)&&(t.push(a.value),!e||t.length!==e);o=!0);}catch(r){n=!0,s=r}finally{try{!o&&c.return&&c.return()}finally{if(n)throw s}}return t}(r,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();function _toArray(r){return Array.isArray(r)?r:Array.from(r)}var _require=require("child_process"),execSync=_require.execSync,_process$argv$slice=process.argv.slice(2),_process$argv$slice2=_slicedToArray(_process$argv$slice,2),start=_process$argv$slice2[0],end=_process$argv$slice2[1];start&&end||(console.error("Must provide start and end tags"),console.error("  eg: v1.0 HEAD"),console.error("  eg: v1.0 v2.0"),process.exit(1));var separator="===END===",res=execSync("git log -E --format=%H%n%s%b===END=== "+start+".."+end),sep=res.toString().split(separator),output=sep.map(function(r,e){var t=_toArray(getParts(r,e));return[t[0],t.slice(1).join("\n")]}).map(function(r){var e=_slicedToArray(r,2),t=e[0],o=e[1];if(/^[\w]+: [^ ]/.test(o)){var n=o.split(/: /),s=_slicedToArray(n,2);return[t,s[0],s[1]]}return[t,"misc",o]}).reduce(function(r,e){var t=_slicedToArray(e,2)[1];return r[t]?r[t].push(e):r[t]=[e],r},{});function getParts(r,e){var t=r.split("\n");return 0===e?t:t.slice(1)}process.argv.indexOf("--json")>-1?console.log(JSON.stringify(output,null,2)):Object.keys(output).map(function(r){return[r,output[r]]}).forEach(function(r){var e=_slicedToArray(r,2),t=e[0],o=e[1],n="**"+t+"**";console.log(n),o.forEach(function(r){var e=_slicedToArray(r,3),t=e[0],o=(e[1],e[2]);console.log("- "+o+" "+t)}),console.log("")});