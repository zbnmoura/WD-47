"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},defaultCompare=require("default-compare"),typeOf=require("kind-of"),get=require("get-value");function arraySort(r,e,t){if(null==r)return[];if(!Array.isArray(r))throw new TypeError("array-sort expects an array.");if(1===arguments.length)return r.sort();var o=flatten([].slice.call(arguments,1));return"object"===typeOf(o[o.length-1])&&(t=o.pop()),r.sort(sortBy(o,t))}function sortBy(r,e){return e=e||{},function(t,o){for(var n,u=r.length,f=-1;++f<u&&0===(n=compare(r[f],t,o)););return!0===e.reverse?-1*n:n}}function compare(r,e,t){return"function"==typeof r?r(e,t,compare.bind(null,null)):r&&"object"===(void 0===e?"undefined":_typeof(e))&&"object"===(void 0===t?"undefined":_typeof(t))?compare(null,get(e,r),get(t,r)):defaultCompare(e,t)}function flatten(r){return[].concat.apply([],r)}module.exports=arraySort;