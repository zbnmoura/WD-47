'use strict';var Base = require('base');var define = require('define-property');var Compiler = require('./lib/compiler');var Parser = require('./lib/parser');var utils = require('./lib/utils');function Snapdragon(options){Base.call(this,null,options);this.options = utils.extend({source:'string'},this.options);this.compiler = new Compiler(this.options);this.parser = new Parser(this.options);Object.defineProperty(this,'compilers',{get:function(){return this.compiler.compilers}});Object.defineProperty(this,'parsers',{get:function(){return this.parser.parsers}});Object.defineProperty(this,'regex',{get:function(){return this.parser.regex}})}Base.extend(Snapdragon);Snapdragon.prototype.capture = function(){return this.parser.capture.apply(this.parser,arguments)};Snapdragon.prototype.use = function(fn){fn.call(this,this);return this};Snapdragon.prototype.parse = function(str,options){,this.options,options);var parsed = this.parser.parse(str,this.options);// add non-enumerable parser reference define(parsed,'parser',this.parser);return parsed};Snapdragon.prototype.compile = function(ast,options){,this.options,options);var compiled = this.compiler.compile(ast,this.options);// add non-enumerable compiler reference define(compiled,'compiler',this.compiler);return compiled};module.exports = Snapdragon;module.exports.Compiler = Compiler;module.exports.Parser = Parser;