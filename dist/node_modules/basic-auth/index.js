"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Buffer=require("safe-buffer").Buffer;module.exports=auth,module.exports.parse=parse;var CREDENTIALS_REGEXP=/^ *(?:[Bb][Aa][Ss][Ii][Cc]) +([A-Za-z0-9._~+/-]+=*) *$/,USER_PASS_REGEXP=/^([^:]*):(.*)$/;function auth(e){if(!e)throw new TypeError("argument req is required");if("object"!==(void 0===e?"undefined":_typeof(e)))throw new TypeError("argument req is required to be an object");return parse(getAuthorization(e))}function decodeBase64(e){return Buffer.from(e,"base64").toString()}function getAuthorization(e){if(!e.headers||"object"!==_typeof(e.headers))throw new TypeError("argument req is required to have headers property");return e.headers.authorization}function parse(e){if("string"==typeof e){var r=CREDENTIALS_REGEXP.exec(e);if(r){var t=USER_PASS_REGEXP.exec(decodeBase64(r[1]));if(t)return new Credentials(t[1],t[2])}}}function Credentials(e,r){this.name=e,this.pass=r}