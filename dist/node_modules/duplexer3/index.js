"use strict";var stream=require("stream");function DuplexWrapper(e,r,t){void 0===t&&(t=r,r=e,e=null),stream.Duplex.call(this,e),"function"!=typeof t.read&&(t=new stream.Readable(e).wrap(t)),this._writable=r,this._readable=t,this._waiting=!1;var n=this;r.once("finish",function(){n.end()}),this.once("finish",function(){r.end()}),t.on("readable",function(){n._waiting&&(n._waiting=!1,n._read())}),t.once("end",function(){n.push(null)}),e&&void 0!==e.bubbleErrors&&!e.bubbleErrors||(r.on("error",function(e){n.emit("error",e)}),t.on("error",function(e){n.emit("error",e)}))}DuplexWrapper.prototype=Object.create(stream.Duplex.prototype,{constructor:{value:DuplexWrapper}}),DuplexWrapper.prototype._write=function(e,r,t){this._writable.write(e,r,t)},DuplexWrapper.prototype._read=function(){for(var e,r=0;null!==(e=this._readable.read());)this.push(e),r++;0===r&&(this._waiting=!0)},module.exports=function(e,r,t){return new DuplexWrapper(e,r,t)},module.exports.DuplexWrapper=DuplexWrapper;